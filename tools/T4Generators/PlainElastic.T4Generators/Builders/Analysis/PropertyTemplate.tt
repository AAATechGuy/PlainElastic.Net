<#@ assembly name="$(ProjectDir)\bin\PlainElastic.T4Generators.dll" #>

<#@ import namespace="PlainElastic.T4Generators.Models" #>
<#@ import namespace="PlainElastic.T4Generators.Utils" #>

<#+
public class PropertyTemplate : Template
{
    public PropertyTemplate(string className, ComponentMetadataPropertyView property)
    {
        ClassName = className;
        Property = property;
    }

    public string ClassName { get; private set; }
    public ComponentMetadataPropertyView Property { get; private set; }

    public override string TransformText()
    {
        var parameterName = Property.ClrName.Uncapitalize();

        var defaultValueStatement = !string.IsNullOrEmpty(Property.DefaultCode)
                                        ? " = " + Property.DefaultCode
                                        : string.Empty;

        string parameterTransformStatement = string.Empty;
        switch (Property.ClrType.ClrTypeCategory())
        {
            case ClrTypeCategory.Primitive:
                parameterTransformStatement = ".AsString()";
                break;
            case ClrTypeCategory.Enum:
                parameterTransformStatement = ".AsString().Quotate()";
                break;
            case ClrTypeCategory.String:
                parameterTransformStatement = ".Quotate()";
                break;
        }

#>

        /// <summary>
        /// <#= Property.Description.ToCodeSummary(indentSpaces: 8) #>
        /// </summary>
        public <#= ClassName #> <#= Property.ClrName #>(<#= Property.ClrType #> <#= parameterName #><#= defaultValueStatement #>)
        {
            RegisterJsonPart("'<#= Property.ElasticName #>': {0}", <#= parameterName #><#= parameterTransformStatement #>);
            return this;
        }
<#+
        return this.GenerationEnvironment.ToString();
    }
}

#>